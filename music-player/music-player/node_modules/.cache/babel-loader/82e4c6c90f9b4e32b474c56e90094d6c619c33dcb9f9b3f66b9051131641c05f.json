{"ast":null,"code":"var _jsxFileName = \"/home/kelvin/Development/code/phase2/Music-Player-Phase-2-Project/music-player/music-player/src/Components/MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ArtistDetails from './ArtistDetails';\nimport MusicControls from './MusicControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = _ref => {\n  _s();\n  let {\n    currentSongI,\n    setCurrentSongI,\n    songs,\n    nextSongI\n  } = _ref;\n  const songElement = useRef(null);\n  const [isPlaying, setIsplaying] = useState(false);\n  useEffect(() => {\n    if (isPlaying) {\n      songElement.current.play();\n    } else {\n      songElement.current.pause();\n    }\n  });\n  const SkipSong = function () {\n    let forwards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (forwards) {\n      setCurrentSongI(() => {\n        let temp = currentSongI;\n        temp++;\n        if (temp > songs.length - 1) {\n          temp = 0;\n        }\n        return temp;\n      });\n    } else {\n      setCurrentSongI(() => {\n        let temp = currentSongI;\n        temp--;\n        if (temp < 0) {\n          temp = songs.length - 1;\n        }\n        return temp;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"musicplayer\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      src: songs[currentSongI].src,\n      ref: songElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ArtistDetails, {\n      music: songs[currentSongI]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MusicControls, {\n      isPlaying: isPlaying,\n      setIsPlaying: setIsplaying,\n      SkipSong: SkipSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Up next: \", songs[nextSongI].title, \" by \", songs[nextSongI].artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"UbpiLQzo8VDDXk5OIFwKq+cDlM0=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ArtistDetails","MusicControls","MusicPlayer","currentSongI","setCurrentSongI","songs","nextSongI","songElement","isPlaying","setIsplaying","current","play","pause","SkipSong","forwards","temp","length","src","title","artist"],"sources":["/home/kelvin/Development/code/phase2/Music-Player-Phase-2-Project/music-player/music-player/src/Components/MusicPlayer.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport ArtistDetails from './ArtistDetails';\nimport MusicControls from './MusicControls';\n\nconst MusicPlayer = ({currentSongI, setCurrentSongI, songs, nextSongI}) => {\n  const songElement = useRef(null)\n\n  const[isPlaying, setIsplaying] = useState(false);\n\n  useEffect(() => {\n    if (isPlaying){\n      songElement.current.play();\n    }else{\n      songElement.current.pause();\n    }\n  })\n  const SkipSong = (forwards = true) => {\n    if(forwards){\n      setCurrentSongI(() => {\n        let temp = currentSongI;\n        temp++;\n\n        if (temp > songs.length -1){\n          temp = 0;\n        }\n        return temp;\n      });\n    }else{\n      setCurrentSongI(() => {\n        let temp = currentSongI;\n        temp--\n\n        if (temp < 0){\n          temp = songs.length -1;\n        }\n        return temp;\n      })\n    }\n  }\n  return (\n    <div className='musicplayer'>\n        <audio src={songs[currentSongI].src} ref={songElement}></audio>\n        <h4>Now Playing</h4>\n        <ArtistDetails music={songs[currentSongI]}/>\n        <MusicControls  isPlaying={isPlaying} setIsPlaying={setIsplaying} SkipSong={SkipSong}/>\n        <p>Up next: {songs[nextSongI].title} by {songs[nextSongI].artist}</p>\n    </div>\n  )\n}\n\nexport default MusicPlayer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACxD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,MAAMC,WAAW,GAAG,QAAuD;EAAA;EAAA,IAAtD;IAACC,YAAY;IAAEC,eAAe;IAAEC,KAAK;IAAEC;EAAS,CAAC;EACpE,MAAMC,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAK,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,EAAC;MACZD,WAAW,CAACG,OAAO,CAACC,IAAI,EAAE;IAC5B,CAAC,MAAI;MACHJ,WAAW,CAACG,OAAO,CAACE,KAAK,EAAE;IAC7B;EACF,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAG,YAAqB;IAAA,IAApBC,QAAQ,uEAAG,IAAI;IAC/B,IAAGA,QAAQ,EAAC;MACVV,eAAe,CAAC,MAAM;QACpB,IAAIW,IAAI,GAAGZ,YAAY;QACvBY,IAAI,EAAE;QAEN,IAAIA,IAAI,GAAGV,KAAK,CAACW,MAAM,GAAE,CAAC,EAAC;UACzBD,IAAI,GAAG,CAAC;QACV;QACA,OAAOA,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,MAAI;MACHX,eAAe,CAAC,MAAM;QACpB,IAAIW,IAAI,GAAGZ,YAAY;QACvBY,IAAI,EAAE;QAEN,IAAIA,IAAI,GAAG,CAAC,EAAC;UACXA,IAAI,GAAGV,KAAK,CAACW,MAAM,GAAE,CAAC;QACxB;QACA,OAAOD,IAAI;MACb,CAAC,CAAC;IACJ;EACF,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBACxB;MAAO,GAAG,EAAEV,KAAK,CAACF,YAAY,CAAC,CAACc,GAAI;MAAC,GAAG,EAAEV;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB,QAAC,aAAa;MAAC,KAAK,EAAEF,KAAK,CAACF,YAAY;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5C,QAAC,aAAa;MAAE,SAAS,EAAEK,SAAU;MAAC,YAAY,EAAEC,YAAa;MAAC,QAAQ,EAAEI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eACvF;MAAA,wBAAaR,KAAK,CAACC,SAAS,CAAC,CAACY,KAAK,UAAMb,KAAK,CAACC,SAAS,CAAC,CAACa,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACnE;AAEV,CAAC;AAAA,GA5CKjB,WAAW;AAAA,KAAXA,WAAW;AA8CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}